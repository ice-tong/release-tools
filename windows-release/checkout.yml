parameters:
  depth: 3

steps:
- checkout: none

- script: git clone --progress -v --depth ${{ parameters.depth }} --branch $(SourceTag) --single-branch https://github.com/$(GitRemote)/cpython.git .
  displayName: 'git clone ($(GitRemote)/$(SourceTag))'
  condition: and(succeeded(), and(variables['GitRemote'], variables['SourceTag']))

- script: git clone --progress -v --depth ${{ parameters.depth }} --branch $(SourceTag) --single-branch $(Build.Repository.Uri) .
  displayName: 'git clone (<default>/$(SourceTag))'
  condition: and(succeeded(), and(not(variables['GitRemote']), variables['SourceTag']))

- script: git clone --progress -v --depth ${{ parameters.depth }} --branch $(Build.SourceBranchName) --single-branch https://github.com/$(GitRemote)/cpython.git .
  displayName: 'git clone ($(GitRemote)/<default>)'
  condition: and(succeeded(), and(variables['GitRemote'], not(variables['SourceTag'])))

- script: git clone --progress -v --depth ${{ parameters.depth }} --branch $(Build.SourceBranchName) --single-branch $(Build.Repository.Uri) .
  displayName: 'git clone'
  condition: and(succeeded(), and(not(variables['GitRemote']), not(variables['SourceTag'])))

- powershell: |
    $checkout_commit = (git rev-parse HEAD)
    if ($checkout_commit -ne $GitCommit) {
        throw "Expected git commit '$(GitCommit)' didn't match tagged commit '$(checkout_commit)'"
    }
  displayName: "Verify CPython commit matches tag"
  condition: and(succeeded(), and(variables['GitCommit']))
